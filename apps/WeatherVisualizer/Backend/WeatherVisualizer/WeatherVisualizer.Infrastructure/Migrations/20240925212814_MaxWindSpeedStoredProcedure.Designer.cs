// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherVisualizer.Infrastructure;

#nullable disable

namespace WeatherVisualizer.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240925212814_MaxWindSpeedStoredProcedure")]
    partial class MaxWindSpeedStoredProcedure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeatherVisualizer.Core.Entities.WeatherMeasurementEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("TemperatureC")
                        .HasColumnType("float");

                    b.Property<double>("WindKph")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("WeatherMeasurementEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
